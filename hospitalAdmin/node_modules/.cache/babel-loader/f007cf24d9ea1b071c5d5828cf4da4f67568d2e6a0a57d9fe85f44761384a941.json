{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\edwin\\\\Downloads\\\\archive\\\\CHENATIONS DOCUMENTS\\\\Wellsfargo\\\\Wopital\\\\hospitalAdmin\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { supabase } from '../lib/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [hospital, setHospital] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check for existing session\n    const getSession = async () => {\n      try {\n        var _session$user;\n        const {\n          data: {\n            session\n          }\n        } = await supabase.auth.getSession();\n        setUser((_session$user = session === null || session === void 0 ? void 0 : session.user) !== null && _session$user !== void 0 ? _session$user : null);\n        if (session !== null && session !== void 0 && session.user) {\n          // Fetch hospital info for this user\n          const {\n            data: admin,\n            error\n          } = await supabase.from('hospital_admins').select('hospital_id, hospitals(name)').eq('user_id', session.user.id).single();\n          if (admin && admin.hospitals) {\n            setHospital({\n              id: admin.hospital_id,\n              name: admin.hospitals.name\n            });\n          } else {\n            setHospital(null);\n          }\n        } else {\n          setHospital(null);\n        }\n      } catch (error) {\n        console.error('Error getting session:', error);\n        setUser(null);\n        setHospital(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getSession();\n\n    // Listen for auth changes\n    const {\n      data: {\n        subscription\n      }\n    } = supabase.auth.onAuthStateChange((event, session) => {\n      var _session$user2, _session$user3;\n      console.log('Auth state changed:', event, session === null || session === void 0 ? void 0 : (_session$user2 = session.user) === null || _session$user2 === void 0 ? void 0 : _session$user2.id);\n      setUser((_session$user3 = session === null || session === void 0 ? void 0 : session.user) !== null && _session$user3 !== void 0 ? _session$user3 : null);\n      setLoading(false);\n    });\n    return () => subscription.unsubscribe();\n  }, []);\n  const signIn = async (email, password) => {\n    try {\n      var _data$user;\n      console.log('Attempting sign in with:', email);\n      const {\n        data,\n        error\n      } = await supabase.auth.signInWithPassword({\n        email,\n        password\n      });\n      if (error) {\n        console.error('Sign in error:', error);\n        throw error;\n      }\n      console.log('Sign in successful:', (_data$user = data.user) === null || _data$user === void 0 ? void 0 : _data$user.id);\n      return {\n        success: true,\n        user: data.user\n      };\n    } catch (error) {\n      console.error('Sign in error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const signOut = async () => {\n    try {\n      const {\n        error\n      } = await supabase.auth.signOut();\n      if (error) throw error;\n      setUser(null);\n      setHospital(null);\n    } catch (error) {\n      console.error('Sign out error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      hospital,\n      loading,\n      signIn,\n      signOut\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"IdxbtuRDQDg2/0/IN4CvkR9GNgA=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  return useContext(AuthContext);\n}\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","supabase","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","hospital","setHospital","loading","setLoading","getSession","_session$user","data","session","auth","admin","error","from","select","eq","id","single","hospitals","hospital_id","name","console","subscription","onAuthStateChange","event","_session$user2","_session$user3","log","unsubscribe","signIn","email","password","_data$user","signInWithPassword","success","message","signOut","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/edwin/Downloads/archive/CHENATIONS DOCUMENTS/Wellsfargo/Wopital/hospitalAdmin/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react'\r\nimport { supabase } from '../lib/supabase'\r\n\r\nconst AuthContext = createContext()\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null)\r\n  const [hospital, setHospital] = useState(null)\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    // Check for existing session\r\n    const getSession = async () => {\r\n      try {\r\n        const { data: { session } } = await supabase.auth.getSession()\r\n        setUser(session?.user ?? null)\r\n        if (session?.user) {\r\n          // Fetch hospital info for this user\r\n          const { data: admin, error } = await supabase\r\n            .from('hospital_admins')\r\n            .select('hospital_id, hospitals(name)')\r\n            .eq('user_id', session.user.id)\r\n            .single()\r\n          if (admin && admin.hospitals) {\r\n            setHospital({ id: admin.hospital_id, name: admin.hospitals.name })\r\n          } else {\r\n            setHospital(null)\r\n          }\r\n        } else {\r\n          setHospital(null)\r\n        }\r\n      } catch (error) {\r\n        console.error('Error getting session:', error)\r\n        setUser(null)\r\n        setHospital(null)\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    }\r\n    getSession()\r\n\r\n    // Listen for auth changes\r\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(\r\n      (event, session) => {\r\n        console.log('Auth state changed:', event, session?.user?.id)\r\n        setUser(session?.user ?? null)\r\n        setLoading(false)\r\n      }\r\n    )\r\n\r\n    return () => subscription.unsubscribe()\r\n  }, [])\r\n\r\n  const signIn = async (email, password) => {\r\n    try {\r\n      console.log('Attempting sign in with:', email)\r\n      const { data, error } = await supabase.auth.signInWithPassword({\r\n        email,\r\n        password\r\n      })\r\n      \r\n      if (error) {\r\n        console.error('Sign in error:', error)\r\n        throw error\r\n      }\r\n      \r\n      console.log('Sign in successful:', data.user?.id)\r\n      return { success: true, user: data.user }\r\n    } catch (error) {\r\n      console.error('Sign in error:', error)\r\n      return { success: false, error: error.message }\r\n    }\r\n  }\r\n\r\n  const signOut = async () => {\r\n    try {\r\n      const { error } = await supabase.auth.signOut()\r\n      if (error) throw error\r\n      setUser(null)\r\n      setHospital(null)\r\n    } catch (error) {\r\n      console.error('Sign out error:', error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, hospital, loading, signIn, signOut }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}